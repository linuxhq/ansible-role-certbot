---
- name: Ensure that the certbot package is installed
  tags: certbot
  become: true
  yum:
    enablerepo: epel
    name: certbot
    state: present

- name: Attempting to overlay certbot configuration directories
  tags: certbot
  become: true
  file:
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
    state: directory
  loop:
    - { path: "{{ certbot_basedir }}", mode: '0755' }
    - { path: "{{ certbot_hookdir }}", mode: '0700' }
  loop_control:
    label: "{{ item.path }}"

- name: Attempting to overlay cloudflare authenticator and cleanup scripts
  tags: certbot
  become: true
  template:
    src: "{{ item|basename + '.j2' }}"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0700
  loop:
    - "{{ certbot_manual_auth_hook }}"
    - "{{ certbot_manual_cleanup_hook }}"
  loop_control:
    label: "{{ item|basename }}"

- name: Attempting to overlay certbot sysconfig configurations
  tags: certbot
  become: true
  template:
    src: certbot.sysconfig.j2
    dest: /etc/sysconfig/certbot
    owner: root
    group: root
    mode: 0644

- name: Attempting to determine if we need to apply for a new certificate
  tags: certbot
  become: true
  stat:
    path: "{{ certbot_basedir + '/live/' + certbot_domains|first + '/fullchain.pem' }}"
  register: certbot_stat

- name: Attempting to execute certbot using dns challenge and manual authentication hooks
  tags: certbot
  become: true
  shell: |
    certbot certonly \
            --agree-tos --manual --manual-public-ip-logging-ok \
            --manual-auth-hook {{ certbot_manual_auth_hook }} \
            --manual-cleanup-hook {{ certbot_manual_cleanup_hook }} \
            --preferred-challenges=dns \
            -d {{ certbot_domains|join(' -d ') }} \
            -m {{ certbot_email }}
  when: not certbot_stat.stat.exists

- name: Ensure that certbot-renew is started and enabled on boot
  tags: certbot
  become: true
  systemd:
    enabled: yes
    name: certbot-renew.timer
    state: started
...
